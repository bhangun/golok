# General info 
info:
  name: golok_apps
  title: Contoh2
  description: Ini contoh aplikasi

endpoint:
  url: http://localhost

# Applications
applications:
  frontend:
    - appsName: golok
      framework: flutter
      # Local Database: hive | sqlLite
      localDatabase: sqlLite # hive
      admin: true
      # Themes option, if not defined would be default.  
      # default | dark | light
      themes: default
      plugins:
      - connection
      stateManagement: riverpod
      # web | android | linux | ios | desktop | all
      # Value input as String or array.
      # e.g platform: web, android
      # or 
      # platfrom: 
      # - web
      # - android
      platform: web,android, linux, ios,desktop
      # Locale options: en | id
      locale: en, id
      entities: '*'
  backend:
    - appsName: my_golok_front
      # Option : flutter | react | vue
      packageName: tech.kayys.golok
      applicationType: microservice
      authenticationType: oauth2 
      buildTool: maven 
      cacheProvider: ehcache
      databaseType: sql 
      devDatabaseType: h2Disk
      enableHibernateCache: true
      enableTranslation: true
      languages: [id, en] #Languages available in JHipster Braces are mandatory
      messageBroker: kafka #, pulsar, no
      nativeLanguage: id #Any language supported by JHipster
      prodDatabaseType: mysql #, mariadb, mssql, postgresql, oracle, no
      searchEngine: elasticsearch #no elasticsearch, couchbase, no
      serverPort: 8080 #, 8081
      serviceDiscoveryType: eureka #no consul, eureka, no
      skipClient: false
      skipServer: false
      skipUserManagement: false
      testFrameworks: [cypress] #cypress, protractor, cucumber, gatling
      #websocket: no
      entities: Product, Order, OrderLine
      dto: 
        - '* with mapstruct'
      paginate: 
        - '* with infinite-scroll'
        - '* with pagination'
      service: 
        - '* with serviceClass'
        - '* with serviceImpl'
  config:
    dto:
      - entities: '*'
        with: mapstruct
    paginate:
      - entities: '*' 
        with: infinite-scroll
      - entities: '*' 
        with: pagination
    service:
      - entities: '*'
        with: serviceClass
      - entities: '*'
        with: serviceImpl
        # except:

entities: 
  - Category:
      properties:
      - name: String, min=3, max=10

includes:
  - file: example/product.yaml
    entities: Product, Status,
    enums: Unit
  - file: example/order.yaml
    

enums:
- GroupType:
  - general, {id:Umum, en:General}
  - private, {id:Khusus, en:Private}

operations:
  - getProductByTenant:
      return:
        ref: Product
        type: array
      parameters:
        - productId: long
        - tenentId: long
        - pagination: int

  - getInvoiceByTime:
      return:
        ref: Invoice
        type: array
      parameters:
        - productId: long
        - tenentId: long
        - from: Instant
        - to: Instant
        - time: enum=TimeSelector
        - pagination: int

  - getTags:
      doc: Get Tags
      return:
        name: String
      parameters:
        - tags: tags
        - pagination: int
        

golokConfiguration: 
  default: 
    - name: default 
      properties: 
        - id: long //ID
        - createAt: datetime //Created time 
        - updateAt: datetime //Updated time

