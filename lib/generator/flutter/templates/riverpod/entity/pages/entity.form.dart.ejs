import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import 'package:<%= model.info.name %>/shared/widgets/progress_indicator_widget.dart';
import '../blogic/<%= snackCase %>_blogic.dart';
import '../model/<%= snackCase %>.dart';

class <%= titleCase %>Form extends ConsumerStatefulWidget {
  const <%= titleCase %>Form({super.key});

  @override
  <%= titleCase %>FormState createState() => <%= titleCase %>FormState();
}

class <%= titleCase %>FormState extends ConsumerState<<%= titleCase %>Form> {<%for (idx in properties) { %><%if(properties[idx].name !='id'){%>
  TextEditingController <%= properties[idx].name %> = TextEditingController();<%} }%>

  @override
  void dispose() {<% for (idx in properties) { %><% if (properties[idx].dartType != 'enum' && properties[idx].name !='id' && properties[idx]['desc'] != 'relationship') {%>
    <%= properties[idx].name %>.dispose();<%}%><%}%>
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    <%= titleCase %>State <%= camelCase %>State = ref.watch(<%= camelCase %>Provider);

    return Scaffold(
        appBar: AppBar(
          title: Text(<%= camelCase %>State.title),
        ),
        body: Stack(
          children: <Widget>[
            <%= camelCase %>State.status.loading
                ? const CustomProgressIndicatorWidget()
                : ListView(
                    padding: const EdgeInsets.symmetric(horizontal: 24.0),
                    children: [<%for (idx in properties) { %><%if(properties[idx].name !='id'){%>
                        textField('<%= properties[idx].name %>', <%= properties[idx].name %>),<%} }%>           
                      ]),          
          ],
        ),
        floatingActionButton: FloatingActionButton(
          onPressed: () => ref.read(<%= camelCase %>Provider.notifier).save(<%= camelCase %>State.<%= camelCase %>),
          tooltip: 'Add',
          child: const Icon(Icons.save),
        ));
  }

  textField(label, controller) => TextField(
        controller: controller,
        decoration: InputDecoration(
          filled: true,
          labelText: label,
        ),
      );

  showSnackBar(String text) {
    final snackBar = SnackBar(
      content: Text(text),
    );
    ScaffoldMessenger.of(context).showSnackBar(snackBar);
  }
}  
